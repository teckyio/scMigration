CREATE OR UPDATE TABLE ERROR_LOG (
    ID           NUMBER GENERATED BY DEFAULT AS IDENTITY,
    TABLE_NAME   VARCHAR2(100),
    ERROR_MESSAGE VARCHAR2(4000),
    LOG_DATE     DATE,
);

CREATE OR REPLACE PROCEDURE generate_Formatted_GUID(p_guid OUT VARCHAR2)
IS
    l_raw_guid RAW(16);
BEGIN
    l_raw_guid := sys_guid();
    p_guid := SUBSTR(rawtohex(l_raw_guid), 1, 8) || '-' ||
              SUBSTR(rawtohex(l_raw_guid), 9, 4) || '-' ||
              SUBSTR(rawtohex(l_raw_guid), 13, 4) || '-' ||
              SUBSTR(rawtohex(l_raw_guid), 17, 4) || '-' ||
              SUBSTR(rawtohex(l_raw_guid), 21, 12);
END;

CREATE OR REPLACE PROCEDURE log_error (
    p_table_name VARCHAR2,
    p_error_msg  VARCHAR2
) IS
BEGIN
    INSERT INTO ERROR_LOG (TABLE_NAME, ERROR_MESSAGE, LOG_DATE)
    VALUES (p_table_name, p_error_msg, SYSDATE);
    COMMIT;
END;

CREATE OR REPLACE PROCEDURE find_dlo_id (
    dloname_in IN VARCHAR2,
    dlo_id_out OUT NUMBER
) IS
BEGIN
    SELECT ID INTO dlo_id_out
    FROM SQ.DLOS
    WHERE DLO_NAME LIKE '%' || dloname_in || '%';
END;