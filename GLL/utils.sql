-- Helper function to covert 'null' string to null
CREATE OR REPLACE FUNCTION NULL_CONVERTOR(
    P_INPUT VARCHAR2
) RETURN VARCHAR2 IS
BEGIN
    IF P_INPUT = 'NULL' THEN
        RETURN NULL;
    ELSE
        RETURN P_INPUT;
    END IF;
END NULL_CONVERTOR;
 

-- Helper function to create MIGRATION_LOG table
CREATE OR REPLACE PROCEDURE INIT_MIGRATION
IS
    PROCEDURE CREATE_LOG_TABLE IS 
    BEGIN
        EXECUTE IMMEDIATE '
        CREATE TABLE MIGRATION_LOG (
        ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY
        , ENTITY_NAME VARCHAR2(100)
        , SOURCE_ID NUMBER
        , TARGET_ID RAW(16)
        , STATUS VARCHAR2(20)
        , ERROR_MESSAGE VARCHAR2(4000)
        , CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )';
    EXCEPTION
        WHEN OTHERS THEN
            IF SQLCODE = -955 THEN
                DBMS_OUTPUT.PUT_LINE ('Table MIGRATION_LOG already exists');
            ELSE
                RAISE;
            END IF;
    END;

    PROCEDURE CREATE_SUMMARY_TABLE IS
    BEGIN
        EXECUTE IMMEDIATE '
        CREATE TABLE MIGRATION_SUMMARY (
        ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY
        , START_TIME TIMESTAMP
        , END_TIME TIMESTAMP
        , ORIGINAL_ENTITY VARCHAR2(500)
        , NEW_ENTITY VARCHAR2(500)
        , TOTAL_RECORDS NUMBER
        , MIGRATED_RECORDS NUMBER
        , FAILED_RECORDS NUMBER
        , CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )';
    EXCEPTION
        WHEN OTHERS THEN
            IF SQLCODE = -955 THEN
                DBMS_OUTPUT.PUT_LINE ('Table MIGRATION_SUMMARY already exists');
            ELSE
                RAISE;
            END IF;
    END;
BEGIN
    CREATE_LOG_TABLE();
    CREATE_SUMMARY_TABLE();
END;